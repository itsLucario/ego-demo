// Code generated by mockery v2.5.1. DO NOT EDIT.

package mocks

import (
	envoy "github.com/grab/ego/ego/src/go/envoy"
	context "github.com/grab/ego/egofilters/http/security/context"

	mock "github.com/stretchr/testify/mock"
)

// Signer is an autogenerated mock type for the Signer type
type Signer struct {
	mock.Mock
}

// Sign provides a mock function with given fields: _a0
func (_m *Signer) Sign(_a0 context.ResponseContext) {
	_m.Called(_a0)
}

// SigningRequired provides a mock function with given fields: headers, authResp
func (_m *Signer) SigningRequired(headers envoy.ResponseHeaderMap, authResp context.AuthResponse) bool {
	ret := _m.Called(headers, authResp)

	var r0 bool
	if rf, ok := ret.Get(0).(func(envoy.ResponseHeaderMap, context.AuthResponse) bool); ok {
		r0 = rf(headers, authResp)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
