// Code generated by mockery v2.5.1. DO NOT EDIT.

package mocks

import (
	context2 "context"

	context "github.com/grab/ego/egofilters/http/security/context"

	envoy "github.com/grab/ego/ego/src/go/envoy"

	io "io"

	logger "github.com/grab/ego/ego/src/go/logger"

	mock "github.com/stretchr/testify/mock"
)

// RequestContext is an autogenerated mock type for the RequestContext type
type RequestContext struct {
	mock.Mock
}

// ActiveSpan provides a mock function with given fields:
func (_m *RequestContext) ActiveSpan() envoy.Span {
	ret := _m.Called()

	var r0 envoy.Span
	if rf, ok := ret.Get(0).(func() envoy.Span); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(envoy.Span)
		}
	}

	return r0
}

// BodyReader provides a mock function with given fields:
func (_m *RequestContext) BodyReader() io.Reader {
	ret := _m.Called()

	var r0 io.Reader
	if rf, ok := ret.Get(0).(func() io.Reader); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(io.Reader)
		}
	}

	return r0
}

// Callbacks provides a mock function with given fields:
func (_m *RequestContext) Callbacks() context.Callbacks {
	ret := _m.Called()

	var r0 context.Callbacks
	if rf, ok := ret.Get(0).(func() context.Callbacks); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(context.Callbacks)
		}
	}

	return r0
}

// GetSecret provides a mock function with given fields: _a0
func (_m *RequestContext) GetSecret(_a0 string) string {
	ret := _m.Called(_a0)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GoContext provides a mock function with given fields:
func (_m *RequestContext) GoContext() context2.Context {
	ret := _m.Called()

	var r0 context2.Context
	if rf, ok := ret.Get(0).(func() context2.Context); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(context2.Context)
		}
	}

	return r0
}

// Headers provides a mock function with given fields:
func (_m *RequestContext) Headers() envoy.RequestHeaderMap {
	ret := _m.Called()

	var r0 envoy.RequestHeaderMap
	if rf, ok := ret.Get(0).(func() envoy.RequestHeaderMap); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(envoy.RequestHeaderMap)
		}
	}

	return r0
}

// Logger provides a mock function with given fields:
func (_m *RequestContext) Logger() logger.Logger {
	ret := _m.Called()

	var r0 logger.Logger
	if rf, ok := ret.Get(0).(func() logger.Logger); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(logger.Logger)
		}
	}

	return r0
}
