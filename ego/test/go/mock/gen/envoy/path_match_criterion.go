// Code generated by mockery v2.5.1. DO NOT EDIT.

package mocks

import (
	envoy "github.com/grab/ego/ego/src/go/envoy"
	mock "github.com/stretchr/testify/mock"

	volatile "github.com/grab/ego/ego/src/go/volatile"
)

// PathMatchCriterion is an autogenerated mock type for the PathMatchCriterion type
type PathMatchCriterion struct {
	mock.Mock
}

// MatchType provides a mock function with given fields:
func (_m *PathMatchCriterion) MatchType() (envoy.PathMatchType, error) {
	ret := _m.Called()

	var r0 envoy.PathMatchType
	if rf, ok := ret.Get(0).(func() envoy.PathMatchType); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(envoy.PathMatchType)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Matcher provides a mock function with given fields:
func (_m *PathMatchCriterion) Matcher() (volatile.String, error) {
	ret := _m.Called()

	var r0 volatile.String
	if rf, ok := ret.Get(0).(func() volatile.String); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(volatile.String)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
