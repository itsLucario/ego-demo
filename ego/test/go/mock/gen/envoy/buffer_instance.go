// Code generated by mockery v2.5.1. DO NOT EDIT.

package mocks

import (
	io "io"

	volatile "github.com/grab/ego/ego/src/go/volatile"
	mock "github.com/stretchr/testify/mock"
)

// BufferInstance is an autogenerated mock type for the BufferInstance type
type BufferInstance struct {
	mock.Mock
}

// CopyOut provides a mock function with given fields: start, p
func (_m *BufferInstance) CopyOut(start uint64, p []byte) int {
	ret := _m.Called(start, p)

	var r0 int
	if rf, ok := ret.Get(0).(func(uint64, []byte) int); ok {
		r0 = rf(start, p)
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// GetRawSlices provides a mock function with given fields:
func (_m *BufferInstance) GetRawSlices() []volatile.Bytes {
	ret := _m.Called()

	var r0 []volatile.Bytes
	if rf, ok := ret.Get(0).(func() []volatile.Bytes); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]volatile.Bytes)
		}
	}

	return r0
}

// Length provides a mock function with given fields:
func (_m *BufferInstance) Length() uint64 {
	ret := _m.Called()

	var r0 uint64
	if rf, ok := ret.Get(0).(func() uint64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint64)
	}

	return r0
}

// NewReader provides a mock function with given fields: start
func (_m *BufferInstance) NewReader(start uint64) io.Reader {
	ret := _m.Called(start)

	var r0 io.Reader
	if rf, ok := ret.Get(0).(func(uint64) io.Reader); ok {
		r0 = rf(start)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(io.Reader)
		}
	}

	return r0
}
